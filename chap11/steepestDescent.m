%> \file
%> Algorithm 11.6: Steepest descent algorithm. Implementation of algorithm 11.6 of \cite Bier15-book
%> 
%> @author <a href="http://people.epfl.ch/michel.bierlaire">Michel Bierlaire</a>
%> @date Fri Mar 20 17:03:30 2015
%> @ingroup Algorithms
%> @ingroup chap11

%> \note Tested with \ref runRosenbrockSteepestDescent.m
%> \note Calls \ref lineSearch

%> Applies the steepest descent algorithm with linesearch to solve \f$\min_x f(x)\f$ where \f$f:\mathbb{R}^n\to\mathbb{R}\f$. 
%> @param obj the name of the Octave function defining f(x) and its derivatives
%> @param x0 the starting point
%> @param eps  algorithm stops if \f$\|F(x)\| \leq \varepsilon \f$. 
%> @param maxiter maximum number of iterations (Default: 100)
%> @return [solution,iteres,niter] 
%> @return solution: local minimum of the function
%> @return iteres: sequence of iterates generated by the algorithm. It contains n+2 columns. Columns 1:n contains the value of the current iterate. Column n+1 contains the value of the objective function. Column n+2 contains the value of the norm of the gradient. It contains maxiter rows, but only the first niter rows are meaningful.
%> @return niter: total number of iterations
function [solution, iteres, niter] = steepestDescent(obj,x0,eps,maxiter = 100)
  xk = x0 ;
  [f,g] = feval(obj,xk)   ;
  iteres = zeros(1+ maxiter,4) ;
  k = 0 ;
  iteres(1,:) = [xk'  f  norm(g) ] ;
  do
    alpha = lineSearch(obj,xk,-g,1.0,1.0e-4,0.99,2) ;
    xk = xk - alpha * g ;
    [f,g] = feval(obj,xk);
    k=k+1 ; 
    iteres(k+1,:) = [xk' f  norm(g) ] ;
  until (norm(g) <= eps || k >= maxiter)
  solution = xk ;
  niter = k ;
endfunction
